version: '3.8'

services:
  # Laravel Application - Production Version
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: cmms-app-prod
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      # Production: Only essential volumes, no bind mounts
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
      - app-storage:/var/www/html/storage
      - app-public-storage:/var/www/html/public/storage
      - app-vendor:/var/www/html/vendor
      - app-node_modules:/var/www/html/node_modules
      # Logs for monitoring
      - app-logs:/var/www/html/storage/logs
    ports:
      - '8000:80'
    environment:
      - APP_ENV=production
      - APP_DEBUG=false
      - DB_CONNECTION=mysql
      - DB_HOST=103.152.5.77
      - DB_PORT=3309
      - DB_DATABASE=cmms
      - DB_USERNAME=cmms
      - DB_PASSWORD=cmmstekpol@2025
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:80/up', '||', 'exit', '1']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - cmms-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: cmms-redis-prod
    restart: unless-stopped
    volumes:
      - redis-data:/data
    ports:
      - '6379:6379'
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - cmms-network

# Named volumes for persistent data
volumes:
  redis-data:
    driver: local
  app-storage:
    driver: local
  app-public-storage:
    driver: local
  app-vendor:
    driver: local
  app-node_modules:
    driver: local
  app-logs:
    driver: local

# Custom network
networks:
  cmms-network:
    driver: bridge
