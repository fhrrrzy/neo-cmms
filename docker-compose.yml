services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: cmms-app
    restart: unless-stopped
    working_dir: /var/www/html
    ports:
      - '8081:8081'
    volumes:
      - storage_data:/var/www/html/storage
      - cache_data:/var/www/html/bootstrap/cache
    environment:
      - APP_NAME=${APP_NAME}
      - APP_ENV=${APP_ENV}
      - APP_KEY=${APP_KEY}
      - APP_DEBUG=${APP_DEBUG}
      - APP_URL=${APP_URL}
      - APP_LOCALE=${APP_LOCALE}
      - APP_FALLBACK_LOCALE=${APP_FALLBACK_LOCALE}
      - APP_FAKER_LOCALE=${APP_FAKER_LOCALE}
      - APP_MAINTENANCE_DRIVER=${APP_MAINTENANCE_DRIVER}
      - PHP_CLI_SERVER_WORKERS=${PHP_CLI_SERVER_WORKERS}
      - BCRYPT_ROUNDS=${BCRYPT_ROUNDS}
      - LOG_CHANNEL=${LOG_CHANNEL}
      - LOG_STACK=${LOG_STACK}
      - LOG_DEPRECATIONS_CHANNEL=${LOG_DEPRECATIONS_CHANNEL}
      - LOG_LEVEL=${LOG_LEVEL}
      - DB_CONNECTION=${DB_CONNECTION}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_DATABASE=${DB_DATABASE}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - SESSION_DRIVER=${SESSION_DRIVER}
      - SESSION_LIFETIME=${SESSION_LIFETIME}
      - SESSION_ENCRYPT=${SESSION_ENCRYPT}
      - SESSION_PATH=${SESSION_PATH}
      - SESSION_DOMAIN=${SESSION_DOMAIN}
      - BROADCAST_CONNECTION=${BROADCAST_CONNECTION}
      - FILESYSTEM_DISK=${FILESYSTEM_DISK}
      - QUEUE_CONNECTION=${QUEUE_CONNECTION}
      - CACHE_STORE=${CACHE_STORE}
      - MEMCACHED_HOST=${MEMCACHED_HOST}
      - REDIS_CLIENT=${REDIS_CLIENT}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_PORT=${REDIS_PORT}
      - MAIL_MAILER=${MAIL_MAILER}
      - MAIL_SCHEME=${MAIL_SCHEME}
      - MAIL_HOST=${MAIL_HOST}
      - MAIL_PORT=${MAIL_PORT}
      - MAIL_USERNAME=${MAIL_USERNAME}
      - MAIL_PASSWORD=${MAIL_PASSWORD}
      - MAIL_FROM_ADDRESS=${MAIL_FROM_ADDRESS}
      - MAIL_FROM_NAME=${MAIL_FROM_NAME}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION}
      - AWS_BUCKET=${AWS_BUCKET}
      - AWS_USE_PATH_STYLE_ENDPOINT=${AWS_USE_PATH_STYLE_ENDPOINT}
      - VITE_APP_NAME=${VITE_APP_NAME}
      - IMS_API_BASE_URL=${IMS_API_BASE_URL}
      - IMS_API_TOKEN=${IMS_API_TOKEN}
      - IMS_API_TIMEOUT=${IMS_API_TIMEOUT}
    networks:
      - cmms-network
    # healthcheck:
    #   test: ['CMD', 'php', '-v']
    #   interval: 30s
    #   timeout: 10s
    #   retries: 3
    #   start_period: 40s
    command:
      [
        '/usr/local/bin/set-permissions.sh',
        'php',
        'artisan',
        'serve',
        '--host=0.0.0.0',
        '--port=8081',
      ]

  worker:
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - storage_data:/var/www/html/storage
      - cache_data:/var/www/html/bootstrap/cache
    command:
      [
        '/usr/local/bin/set-permissions.sh',
        'supervisord',
        '-c',
        '/etc/supervisor/conf.d/supervisord.conf',
      ]
    environment:
      - APP_NAME=${APP_NAME}
      - APP_ENV=${APP_ENV}
      - APP_KEY=${APP_KEY}
      - APP_DEBUG=${APP_DEBUG}
      - APP_URL=${APP_URL}
      - APP_LOCALE=${APP_LOCALE}
      - APP_FALLBACK_LOCALE=${APP_FALLBACK_LOCALE}
      - APP_FAKER_LOCALE=${APP_FAKER_LOCALE}
      - APP_MAINTENANCE_DRIVER=${APP_MAINTENANCE_DRIVER}
      - PHP_CLI_SERVER_WORKERS=${PHP_CLI_SERVER_WORKERS}
      - BCRYPT_ROUNDS=${BCRYPT_ROUNDS}
      - LOG_CHANNEL=${LOG_CHANNEL}
      - LOG_STACK=${LOG_STACK}
      - LOG_DEPRECATIONS_CHANNEL=${LOG_DEPRECATIONS_CHANNEL}
      - LOG_LEVEL=${LOG_LEVEL}
      - DB_CONNECTION=${DB_CONNECTION}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_DATABASE=${DB_DATABASE}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - SESSION_DRIVER=${SESSION_DRIVER}
      - SESSION_LIFETIME=${SESSION_LIFETIME}
      - SESSION_ENCRYPT=${SESSION_ENCRYPT}
      - SESSION_PATH=${SESSION_PATH}
      - SESSION_DOMAIN=${SESSION_DOMAIN}
      - BROADCAST_CONNECTION=${BROADCAST_CONNECTION}
      - FILESYSTEM_DISK=${FILESYSTEM_DISK}
      - QUEUE_CONNECTION=${QUEUE_CONNECTION}
      - CACHE_STORE=${CACHE_STORE}
      - MEMCACHED_HOST=${MEMCACHED_HOST}
      - REDIS_CLIENT=${REDIS_CLIENT}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_PORT=${REDIS_PORT}
      - MAIL_MAILER=${MAIL_MAILER}
      - MAIL_SCHEME=${MAIL_SCHEME}
      - MAIL_HOST=${MAIL_HOST}
      - MAIL_PORT=${MAIL_PORT}
      - MAIL_USERNAME=${MAIL_USERNAME}
      - MAIL_PASSWORD=${MAIL_PASSWORD}
      - MAIL_FROM_ADDRESS=${MAIL_FROM_ADDRESS}
      - MAIL_FROM_NAME=${MAIL_FROM_NAME}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION}
      - AWS_BUCKET=${AWS_BUCKET}
      - AWS_USE_PATH_STYLE_ENDPOINT=${AWS_USE_PATH_STYLE_ENDPOINT}
      - VITE_APP_NAME=${VITE_APP_NAME}
      - IMS_API_BASE_URL=${IMS_API_BASE_URL}
      - IMS_API_TOKEN=${IMS_API_TOKEN}
      - IMS_API_TIMEOUT=${IMS_API_TIMEOUT}
    networks:
      - cmms-network
    deploy:
      replicas: 3
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'

  redis:
    image: redis:7-alpine
    container_name: cmms-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    networks:
      - cmms-network
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.25'
        reservations:
          memory: 128M
          cpus: '0.1'

volumes:
  redis_data:
  storage_data:
  cache_data:

networks:
  cmms-network:
    driver: bridge
