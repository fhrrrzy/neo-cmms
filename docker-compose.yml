services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: cmms-app
    restart: unless-stopped
    working_dir: /var/www/html
    ports:
      - '8988:80'
      - '8989:8080' # WebSocket port for Reverb
    volumes:
      - storage_data:/var/www/html/storage
      - cache_data:/var/www/html/bootstrap/cache
    environment:
      - DB_CONNECTION=mysql
      - DB_HOST=103.197.188.18
      - DB_PORT=6969
      - DB_DATABASE=cmms
      - DB_USERNAME=cmms
      - DB_PASSWORD=cmms
      - REDIS_HOST=redis
      - CACHE_DRIVER=redis
      - SESSION_DRIVER=redis
      - QUEUE_CONNECTION=redis
      - REVERB_SERVER_HOST=127.0.0.1
      - REVERB_SERVER_PORT=6001
      - REVERB_HOST=localhost
      - REVERB_PORT=8989
      - REVERB_SCHEME=http
    env_file:
      - .env
    networks:
      - cmms-network
    healthcheck:
      test: ['CMD', '/usr/local/bin/healthcheck.sh']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  worker:
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - storage_data:/var/www/html/storage
      - cache_data:/var/www/html/bootstrap/cache
    command:
      [
        '/usr/local/bin/set-permissions.sh',
        'supervisord',
        '-c',
        '/etc/supervisor/conf.d/supervisord-worker.conf',
      ]
    environment:
      - DB_CONNECTION=mysql
      - DB_HOST=103.197.188.18
      - DB_PORT=6969
      - DB_DATABASE=cmms
      - DB_USERNAME=cmms
      - DB_PASSWORD=cmms
      - REDIS_HOST=redis
      - CACHE_DRIVER=redis
      - SESSION_DRIVER=redis
      - QUEUE_CONNECTION=redis
    env_file:
      - .env
    networks:
      - cmms-network
    deploy:
      replicas: 3
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'

  redis:
    image: redis:7-alpine
    container_name: cmms-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    networks:
      - cmms-network
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.25'
        reservations:
          memory: 128M
          cpus: '0.1'

volumes:
  redis_data:
  storage_data:
  cache_data:

networks:
  cmms-network:
    driver: bridge
