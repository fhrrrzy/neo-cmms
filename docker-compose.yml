services:
  app:
    build:
      context: .
      dockerfile: Dockerfile.optimized
    container_name: cmms-app
    restart: unless-stopped
    working_dir: /var/www/html
    ports:
      - '8988:80'
    volumes:
      - storage_data:/var/www/html/storage
      - cache_data:/var/www/html/bootstrap/cache
    environment:
      - APP_ENV=${APP_ENV:-local}
      - APP_DEBUG=${APP_DEBUG:-true}
      - DB_CONNECTION=${DB_CONNECTION:-mysql}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT:-3306}
      - DB_DATABASE=${DB_DATABASE}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - REDIS_HOST=redis
      - CACHE_DRIVER=${CACHE_DRIVER:-redis}
      - SESSION_DRIVER=${SESSION_DRIVER:-redis}
      - QUEUE_CONNECTION=${QUEUE_CONNECTION:-redis}
      - REVERB_SERVER_HOST=${REVERB_SERVER_HOST:-127.0.0.1}
      - REVERB_SERVER_PORT=${REVERB_SERVER_PORT:-6001}
      - REVERB_HOST=reverb
      - REVERB_PORT=8080
      - REVERB_SCHEME=${REVERB_SCHEME:-http}
    env_file:
      - .env
    networks:
      - cmms-network
    healthcheck:
      test: ['CMD', '/usr/local/bin/healthcheck.sh']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  worker-queue-high:
    build:
      context: .
      dockerfile: Dockerfile.optimized
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - storage_data:/var/www/html/storage
      - cache_data:/var/www/html/bootstrap/cache
    command:
      [
        'sh',
        '-lc',
        '/usr/local/bin/set-permissions.sh && php -d memory_limit=512M artisan queue:work --queue=high --sleep=1 --tries=3 --timeout=900 --memory=512',
      ]
    environment:
      - APP_ENV=${APP_ENV:-local}
      - APP_DEBUG=${APP_DEBUG:-true}
      - DB_CONNECTION=${DB_CONNECTION:-mysql}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT:-3306}
      - DB_DATABASE=${DB_DATABASE}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - REDIS_HOST=redis
      - CACHE_DRIVER=${CACHE_DRIVER:-redis}
      - SESSION_DRIVER=${SESSION_DRIVER:-redis}
      - QUEUE_CONNECTION=${QUEUE_CONNECTION:-redis}
    env_file:
      - .env
    networks:
      - cmms-network
    deploy:
      replicas: 1
      resources:
        limits:
          memory: 1024M
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'

  worker-queue-default:
    build:
      context: .
      dockerfile: Dockerfile.optimized
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - storage_data:/var/www/html/storage
      - cache_data:/var/www/html/bootstrap/cache
    command:
      [
        'sh',
        '-lc',
        '/usr/local/bin/set-permissions.sh && php artisan queue:work --queue=default --sleep=1 --tries=3 --memory=256',
      ]
    environment:
      - APP_ENV=${APP_ENV:-local}
      - APP_DEBUG=${APP_DEBUG:-true}
      - DB_CONNECTION=${DB_CONNECTION:-mysql}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT:-3306}
      - DB_DATABASE=${DB_DATABASE}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - REDIS_HOST=redis
      - CACHE_DRIVER=${CACHE_DRIVER:-redis}
      - SESSION_DRIVER=${SESSION_DRIVER:-redis}
      - QUEUE_CONNECTION=${QUEUE_CONNECTION:-redis}
    env_file:
      - .env
    networks:
      - cmms-network
    deploy:
      replicas: 1
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'

  worker-queue-low:
    build:
      context: .
      dockerfile: Dockerfile.optimized
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - storage_data:/var/www/html/storage
      - cache_data:/var/www/html/bootstrap/cache
    command:
      [
        'sh',
        '-lc',
        '/usr/local/bin/set-permissions.sh && php artisan queue:work --queue=low --sleep=1 --tries=3 --memory=256',
      ]
    environment:
      - APP_ENV=${APP_ENV:-local}
      - APP_DEBUG=${APP_DEBUG:-true}
      - DB_CONNECTION=${DB_CONNECTION:-mysql}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT:-3306}
      - DB_DATABASE=${DB_DATABASE}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - REDIS_HOST=redis
      - CACHE_DRIVER=${CACHE_DRIVER:-redis}
      - SESSION_DRIVER=${SESSION_DRIVER:-redis}
      - QUEUE_CONNECTION=${QUEUE_CONNECTION:-redis}
    env_file:
      - .env
    networks:
      - cmms-network
    deploy:
      replicas: 1
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'

  worker-schedule:
    build:
      context: .
      dockerfile: Dockerfile.optimized
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - storage_data:/var/www/html/storage
      - cache_data:/var/www/html/bootstrap/cache
    command:
      [
        'sh',
        '-lc',
        '/usr/local/bin/set-permissions.sh && php artisan schedule:work',
      ]
    environment:
      - APP_ENV=${APP_ENV:-local}
      - APP_DEBUG=${APP_DEBUG:-true}
      - DB_CONNECTION=${DB_CONNECTION:-mysql}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT:-3306}
      - DB_DATABASE=${DB_DATABASE}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - REDIS_HOST=redis
      - CACHE_DRIVER=${CACHE_DRIVER:-redis}
      - SESSION_DRIVER=${SESSION_DRIVER:-redis}
      - QUEUE_CONNECTION=${QUEUE_CONNECTION:-redis}
    env_file:
      - .env
    networks:
      - cmms-network
    deploy:
      replicas: 1
      resources:
        limits:
          memory: 256M
          cpus: '0.25'
        reservations:
          memory: 128M
          cpus: '0.1'

  reverb:
    build:
      context: .
      dockerfile: Dockerfile.optimized
    restart: unless-stopped
    working_dir: /var/www/html
    ports:
      - '8989:8080'
    volumes:
      - storage_data:/var/www/html/storage
      - cache_data:/var/www/html/bootstrap/cache
    command:
      [
        'sh',
        '-lc',
        '/usr/local/bin/set-permissions.sh && php artisan package:discover --no-interaction && php artisan config:clear && php artisan cache:clear && php artisan reverb:install --no-interaction && php artisan reverb:start --host=0.0.0.0 --port=8080',
      ]
    environment:
      - APP_ENV=${APP_ENV:-local}
      - APP_DEBUG=${APP_DEBUG:-true}
      - DB_CONNECTION=${DB_CONNECTION:-mysql}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT:-3306}
      - DB_DATABASE=${DB_DATABASE}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - REDIS_HOST=redis
      - CACHE_DRIVER=${CACHE_DRIVER:-redis}
      - SESSION_DRIVER=${SESSION_DRIVER:-redis}
      - QUEUE_CONNECTION=${QUEUE_CONNECTION:-redis}
      - REVERB_SERVER_HOST=0.0.0.0
      - REVERB_SERVER_PORT=8080
    env_file:
      - .env
    networks:
      - cmms-network
    deploy:
      replicas: 1
      resources:
        limits:
          memory: 256M
          cpus: '0.25'
        reservations:
          memory: 128M
          cpus: '0.1'

  redis:
    image: redis:7-alpine
    container_name: cmms-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    networks:
      - cmms-network
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.25'
        reservations:
          memory: 128M
          cpus: '0.1'

volumes:
  redis_data:
  storage_data:
  cache_data:

networks:
  cmms-network:
    driver: bridge
